@page "/register"
@using System.ComponentModel.DataAnnotations
@using Essiq.Showroom.Server.Client
@using Essiq.Showroom.Client.Utils
@using Essiq.Showroom.Client.Services
@inject NavigationManager NavigationManager
@inject IUserClient UserClient
@inject TokenAuthenticationStateProvider AuthStateProvider
@inject IJSHelpers JSHelpers
@layout BaseLayout
@using Essiq.Showroom.Shared
@attribute [Authorize(Roles = RoleConstants.Administrator)]

<div class="container">
    <div class="py-5 text-center">
        <h2>Register</h2>
        <p class="lead">Register.</p>
    </div>

    <EditForm Model="@registerForm" OnValidSubmit="@SubmitForm">
        <div class="row">
            <div class="col-md-6 mb-3">
                <label for="firstName">First name</label>
                <InputText class="form-control" placeholder="First Name" @bind-Value="registerForm.FirstName"></InputText>
                <ValidationMessage For="@(() => registerForm.FirstName)"></ValidationMessage>
            </div>
            <div class="col-md-6 mb-3">
                <label for="lastName">Last name</label>
                <InputText class="form-control" placeholder="Last Name" @bind-Value="registerForm.LastName"></InputText>
                <ValidationMessage For="@(() => registerForm.LastName)"></ValidationMessage>
            </div>
        </div>

        <div class="mb-3">
            <label for="email">Email <span class="text-muted">(Optional)</span></label>
            <InputText class="form-control" placeholder="Email address" @bind-Value="registerForm.Email"></InputText>
            <ValidationMessage For="@(() => registerForm.Email)"></ValidationMessage>
        </div>

        <div class="mb-3">
            <label for="address">Password</label>
            <input type="password" class="form-control" placeholder="Password" @bind="registerForm.Password" />
            <ValidationMessage For="@(() => registerForm.Password)"></ValidationMessage>
        </div>

        <div class="mb-3">
            <label for="address">Confirm password</label>
            <input type="password" class="form-control" placeholder="Confirm Password" @bind="registerForm.ConfirmPassword" />
            <ValidationMessage For="@(() => registerForm.ConfirmPassword)"></ValidationMessage>
        </div>

        <hr class="mb-4">
        <button class="btn btn-primary" type="submit">Register</button>
    </EditForm>

    <footer class="my-5 pt-5 text-muted text-center text-small">
        <p class="mb-1">&copy; @DateTime.Now.Year ESSIQ Syde</p>
        <ul class="list-inline">
            <li class="list-inline-item"><a href="#">Privacy</a></li>
            <li class="list-inline-item"><a href="#">Terms</a></li>
            <li class="list-inline-item"><a href="#">Support</a></li>
        </ul>
    </footer>
</div>


@code {
    RegisterForm registerForm = new RegisterForm();

    async Task SubmitForm()
    {
        //try
        //{
        //    await UserClient.RegisterAsync(new RegistrationRequest()
        //    {
        //        FirstName = registerForm.FirstName,
        //        LastName = registerForm.LastName,
        //        Email = registerForm.Email,
        //        Password = registerForm.Password
        //    });

        //    NavigationManager.NavigateTo("/login");
        //}
        /*catch (ApiException exc)
        {

        }
        catch (HttpRequestException exc)
        {

        }*/
        //catch (Exception exc)
        //{
        //    await JSHelpers.Alert(exc.Message);
        //}
    }

    class RegisterForm
    {
        [Required]
        public string FirstName { get; set; }

        [Required]
        public string LastName { get; set; }

        [Required, EmailAddress]
        public string Email { get; set; }

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; }

        [Required]
        [DataType(DataType.Password)]
        [Compare(nameof(Password))]
        public string ConfirmPassword { get; set; }
    }
}
