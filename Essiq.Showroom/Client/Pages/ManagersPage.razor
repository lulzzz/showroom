@page "/managers"
@using Essiq.Showroom.Server.Client
@using Essiq.Showroom.Client.Services
@inject IManagersClient ManagersClient
@inject NavigationManager NavigationManager
@inject IJSHelpers JSHelpers
@using Essiq.Showroom.Shared
@attribute [Authorize(Roles = RoleConstants.AdministratorAndManager)]

<Loader Task="task">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h2>Managers</h2>
    </div>

    <a class="btn btn-primary" href="/managers/add"><span class="oi oi-plus" aria-hidden="true"></span> Add</a>

    @if (managers == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <TableView Items="managers.AsReadOnly()"
                   TItem="ManagerProfile"
                   OnRowClicked="@(item => NavigationManager.NavigateTo($"/managers/edit/{item.Id}"))">
            <TableHeader>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Display Name</th>
                <th>Organization</th>
                <th></th>
            </TableHeader>
            <RowTemplate Context="manager">
                <td>@manager.FirstName</td>
                <td>@manager.LastName</td>
                <td>@manager.DisplayName</td>
                <td>@manager.Organization.Name</td>
                <td>
                    <a href="/managers/edit/@manager.Id"><span class="oi oi-pencil" aria-hidden="true" @onclick:stopPropagation></span></a>
                </td>
            </RowTemplate>
        </TableView>
    }

</Loader>

@code {
    private Task task;
    private List<ManagerProfile> managers;

    protected override void OnInitialized()
    {
        task = OnInitialize();
    }

    private async Task OnInitialize()
    {
        try
        {
            managers = (await ManagersClient.GetManagersAsync(null)).ToList();
        }
        /*catch (ApiException exc)
        {

        }
        catch (HttpRequestException exc)
        {

        }*/
        catch (Exception exc)
        {
            await JSHelpers.Alert(exc.Message);
        }
    }
}

