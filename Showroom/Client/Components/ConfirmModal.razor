<Modal @ref="modal" OnShow="OnShow">
    <ModalHeader>
        <h5 class="modal-title">
            @if (TitleTemplate != null)
            {
                @TitleTemplate
            }
            else
            {
                @Title
            }
        </h5>
        <button type="button" class="close" @onclick="@(async () => await OnResult())">×</button>
    </ModalHeader>
    <ModalBody>
        @ChildContent
    </ModalBody>
    <ModalFooter>
        <button class="btn btn-primary" type="button" @onclick="@(async () => await OnResult(true))">@ConfirmButtonText</button>
        <button class="btn btn-secondary" type="button" @onclick="@(async () => await OnResult(false))">@CancelButtonText</button>
    </ModalFooter>
</Modal>

@code {
    Modal modal;

    [Parameter]
    public string Title { get; set; }
    
    [Parameter]
    public RenderFragment TitleTemplate { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string ConfirmButtonText { get; set; } = "Yes";

    [Parameter]
    public string CancelButtonText { get; set; } = "No";

    [Parameter]
    public EventCallback OnShow { get; set; }

    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    [Parameter]
    public EventCallback<bool> OnConfirm { get; set; }

    public Task Show() => modal.Show();

    public Task Close() => modal.Close();

    private async Task OnResult(bool value = false)
    {
        if(value)
        {
            await OnConfirm.InvokeAsync(value);
        }
        await Close();
        await OnClose.InvokeAsync(value);
    }
}