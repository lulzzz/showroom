@page "/consultants"
@using Showroom.Server.Client
@using Showroom.Client.Services
@inject IConsultantProfilesClient ConsultantProfilesClient
@inject NavigationManager NavigationManager
@inject IJSHelpers JSHelpers
@using Showroom.Shared
@attribute [Authorize(Roles = RoleConstants.AdministratorAndManager)]

<Loader Task="@task">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h2>Consultants</h2>

    </div>

    <a class="btn btn-primary" href="/consultants/add"><span class="oi oi-plus" aria-hidden="true"></span> Add</a>

    <TableView Items="consultants.AsReadOnly()"
               TItem="ConsultantProfile"
               OnRowClicked="@(item => NavigationManager.NavigateTo($"/consultants/{item.Id}"))">
        <TableHeader>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Display Name</th>
            <th>Competence Area</th>
            <th>Organization</th>
            <th></th>
        </TableHeader>
        <RowTemplate Context="consultant">
            <td>@consultant.FirstName</td>
            <td>@consultant.LastName</td>
            <td>@consultant.DisplayName</td>
            <td>@consultant.CompetenceArea.Name</td>
            <td>@consultant.Organization.Name</td>
            <td>
                <a href="/consultants/@consultant.Id" @onclick:stopPropagation><span class="oi oi-magnifying-glass" aria-hidden="true"></span></a>
                <a href="/consultants/edit/@consultant.Id " @onclick:stopPropagation><span class="oi oi-pencil" aria-hidden="true"></span></a>
            </td>
        </RowTemplate>
    </TableView>
</Loader>

@code {
    private List<ConsultantProfile> consultants;
    private Task task;

    protected override void OnInitialized()
    {
        task = OnInitialize();
    }

    private async Task OnInitialize()
    {
        try
        {
            consultants = (await ConsultantProfilesClient.GetConsultantProfilesAsync(null, null, null, true, 0, 10)).ToList();
        }
        /*catch (ApiException exc)
        {

        }
        catch (HttpRequestException exc)
        {

        }*/
        catch (Exception exc)
        {
            await JSHelpers.Alert(exc.Message);
        }
    }
}

