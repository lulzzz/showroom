@page "/login"
@using System.ComponentModel.DataAnnotations
@using Showroom.Server.Client
@using Showroom.Client.Utils
@using Showroom.Client.Services
@using System.Text.Json
@inject NavigationManager NavigationManager
@inject IIdentityService IdentityService
@inject IJSHelpers JSHelpers
@layout BaseLayout

<EditForm Model="@credentials" OnValidSubmit="@SubmitCredentials" class="form-signin animated fadeIn faster">

    <div class="text-center mb-4">
        <img src="/images/Essiq-Pos-Logo-Small.png" class="logo"><h1 class="h3 mb-3 font-weight-normal">Welcome!</h1>
    </div>

    <DataAnnotationsValidator />

    <div class="form-floating mb-3">
        <InputText class="form-control" name="floatingInput" placeholder="name@example.com" @bind-Value="@credentials.Email"></InputText>
        <label for="floatingInput">Email address</label>
        <ValidationMessage For="@(() => credentials.Email)"></ValidationMessage>
    </div>

    <div class="form-floating mb-3">
        <InputText type="password" name="floatingPassword" class="form-control" placeholder="Password" @bind-Value="@credentials.Password" />
        <label for="floatingPassword">Password</label>
        <ValidationMessage For="@(() => credentials.Password)"></ValidationMessage>
    </div>

    <div class="col text-center">
        <button type="submit" class="btn btn-lg btn-primary btn-block"><i class="oi oi-account-login"></i> Log in</button>
    </div>

    <p class="mt-5 mb-3 text-muted text-center">&copy; @DateTime.Now.Year ESSIQ Syd</p>

</EditForm>

@code {
    FormCredentials credentials = new FormCredentials();

    async Task SubmitCredentials()
    {
        try
        {
            await IdentityService.LoginAsync(credentials.Email, credentials.Password);

            NavigationManager.NavigateTo("/");
        }
        catch (ApiException<ProblemDetails> exc)
        {
            await JSHelpers.Alert(exc.Result.Detail);
        }
        /* catch (HttpRequestException exc)
        {
            await JSHelpers.Alert(JsonSerializer.Serialize(exc.ToString()));
        }*/
        catch (Exception exc)
        {
            await JSHelpers.Alert(exc.Message);
        }
    }

    class FormCredentials
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; }
    }
}
